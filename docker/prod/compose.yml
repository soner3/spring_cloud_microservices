services:
  rabbitmq:
    image: rabbitmq:4.0-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 5s
    networks:
      - sonerapp

  mongo-product:
    container_name: productdb
    image: mongo:8
    restart: always
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 10s
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
    volumes:
      - ./../../data/mongo-productdb:/data/db
    networks:
      - sonerapp

  mongo-recommendation:
    container_name: recommendationdb
    image: mongo:8
    restart: always
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 10s
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27018:27017
    volumes:
      - ./../../data/mongo-recommendationdb:/data/db
    networks:
      - sonerapp

  mysql-review:
    container_name: reviewdb
    image: mysql:8.0.40-bookworm
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 10s
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=reviewdb
    ports:
      - 3306:3306
    volumes:
      - ./../../data/mysql-reviewdb:/var/lib/mysql
    networks:
      - sonerapp

  product:
    image: soner9/product:v4
    container_name: product
    ports:
      - 7001:7001
    environment:
      - SPRING_APPLICATION_NAME=product
      - SPRING_DATA_MONGODB_HOST=mongo-product
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo-product:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - sonerapp

  recommendation:
    image: soner9/recommendation:v4
    container_name: recommendation
    ports:
      - 7002:7002
    environment:
      - SPRING_APPLICATION_NAME=recommendation
      - SPRING_DATA_MONGODB_HOST=mongo-recommendation
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo-recommendation:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - sonerapp

  review:
    image: soner9/review:v4
    container_name: review
    ports:
      - 7003:7003
    environment:
      - SPRING_APPLICATION_NAME=review
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-review/reviewdb
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
      mysql-review:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - sonerapp

  product-aggregator:
    image: soner9/product-aggregator:v4
    container_name: product-aggregator
    ports:
      - 7000:7000
    environment:
      - SPRING_APPLICATION_NAME=product-aggregator
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_RABBITMQ_HOST=rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - sonerapp

networks:
  sonerapp:
    driver: bridge
